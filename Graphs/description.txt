Dany jest ważony, nieskierowany graf G oraz dwumilowe buty- specjalny sposób poruszania się
 po grafie. Dwumilowe buty umożliwiają pokonywanie ścieżki złożonej z dwóch krawędzi grafu tak,
 jakby była ona pojedynczą krawędzią o wadze równej maksimum wag obu krawędzi ze ścieżki. Istnieje
 jednak ograniczenie- pomiędzy każdymi dwoma użyciami dwumilowych butów należy przejść
 wgrafie co najmniej jedną krawędź w sposób zwyczajny. Macierz G zawiera wagi krawędzi w grafie,
 będące liczbami naturalnymi, wartość 0 oznacza brak krawędzi.
 Proszę opisać, zaimplementować i oszacować złożoność algorytmu znajdowania najkrótszej ścieżki
 w grafie z wykorzystaniem mechanizmu dwumilowych butów.
 Rozwiązanie należy zaimplementować w postaci funkcji:
 def jumper(G, s, w):
 ...
 która zwraca długość najkrótszej ścieżki w grafie G pomiędzy wierzchołkami s i w, zgodnie z
 zasadami używania dwumilowych butów
